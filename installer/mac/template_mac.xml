<?xml version="1.0" encoding="UTF-8"?>

<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<project name="mac build template" basedir="." default="build-pkg">

<!--
variables to be set
appname - application name
zipname - name of a temporary archive
appversion, version, exename, icon - values for the pkg
pmproj - project file
appdir
-->
  <property name="pkg.dest" value="build/pkg"/>

  <target name="clean-impl">
    <!-- dummy - to be redefined in the using xml-->
  </target>

  <target name="clean" depends="clean-impl">
    <delete dir="build"/>
    <delete file="${zipname}"/>
  </target>

  <target name="distclean" depends="clean">
    <delete dir="dist"/>
  </target>

  <target name="get-bits"> 
    <!-- dummy - to be redefined in the using xml-->
  </target>

  <target name="unzip">
    <!-- dummy - to be redefined in the using xml-->
  </target>

  <target name="mkdirs">
    <!-- dummy - to be redefined in the using xml-->
  </target>

  <target name="build-app" depends="get-bits">
    <delete dir="${appdir}"/>
    
    <ant target="mkdirs"/>
    <!--mkdir dir="${appdir}/Contents"/>
    <mkdir dir="${appdir}/Contents/MacOS"/>
    <mkdir dir="${appdir}/Contents/Resources"/-->

    <echo message="Unzipping ${appname}" />
    <mkdir dir="${appdir}"/>
    <ant target="unzip"/>

    <!--echo message="Generating Info.plist" />
    <copy file="Info.plist" filtering="true" tofile="${appdir}/Contents/Info.plist">
      <filterset>
        <filter token="APPNAME" value="${appname}"/>
        <filter token="APPVERSION" value="${appversion}"/>
        <filter token="VERSION" value="${version}"/>
        <filter token="EXENAME" value="${exename}"/>
        <filter token="ICONFILENAME" value="${icon}"/>
      </filterset>
    </copy-->

  </target>
  <target name="build-app-zip" depends="build-app" description="Builds zipfile containing ${appname}.app">
    <echo message="Creating ${zipname}"/>
    <mkdir dir="dist"/>
    <exec executable="sh" failonerror="yes">
      <arg value="-c"/>
      <arg value="cd ${basedir}/build/app/${zipdir}; zip -r ${basedir}/dist/${zipname} *"/>
    </exec>
  </target>

  <target name="pre-build-pkg">
    <!-- dummy - to be redefined in the using xml-->
  </target>

  <target name="build-pkg" depends="build-app">
    <echo message="Executing pack200 in ${appdir}"/>
    <exec executable="sh" failonerror="yes">
      <arg value="-c"/>
      <!--arg value='cd "${appdir}"; find . -name "*.pack" -exec sh -c \'f=\`basename "{}"\` ; if [ "$f" != "jhall.jar" ] && [ "$f" != "derby.jar" ] && [ "$f" != "derbyclient.jar" ] ; then pack200 -J-Xmx256m -g {}.pack {} ; fi\' \;'/-->
      <!--arg value='cd "${appdir}"; find . -name \*.jar -exec pack200 -J-Xmx256m -g {}.pack {} \;'/-->
      <arg value='cd "${appdir}" ; sh ${basedir}/../pack200.sh'/>
    </exec>
    <!--exec executable="sh" failonerror="yes">
      <arg value="-c"/>
      <arg value='cd "${appdir}"; find . -name \*.jar -exec rm {} \;'/>
    </exec-->
    <mkdir dir="${basedir}/build/pkg"/>
    <delete dir="${basedir}/build/pkg/${appname}.pkg"/>
    <ant target="pre-build-pkg"/>
    <echo message="Building ${appname} into ${pkg.dest}/${appname}.pkg"/>
    <exec executable="sh" failonerror="yes">
      <arg value="-c"/>
      <arg value="cd ${basedir} ; /Developer/Tools/packagemaker -build -v -p ${pkg.dest}/${appname}.pkg -proj ${pmproj}"/>
    </exec>
  </target>
  <target name="delete-pkg">
      <delete dir="${pkg.dest}/${appname}.pkg"/>
  </target>
</project>

