<?xml version="1.0" encoding="UTF-8"?>

<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<project name="glassfish" basedir="." default="build-pkg">
    <property name="builddir" value="${basedir}/build"/>
    <property name="appdir" value="${builddir}/app"/>
    <property name="scriptsdir" value="${builddir}/scripts"/>
    
<!--    <target name="clean"  depends="clean-getport">-->
    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="init">
         <mkdir dir="${appdir}"/>
         <mkdir dir="${scriptsdir}"/>
    </target>
    
    <target name="get-bits">       
        <echo message="Downloading GlassFish from ${glassfish_location}" />
        <get src="${glassfish_location}" dest="./build/glassfish_image.zip" usetimestamp="true"/>
    </target>
    
    <target name="unzip" depends="get-bits">       
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value="cd ${builddir} ; unzip glassfish_image.zip -d ${appdir}; mv -f ${appdir}/${glassfish.subdir}/* ${appdir}; mv -f ${appdir}/${glassfish.subdir}/.org* ${appdir}; rm -rf ${appdir}/${glassfish.subdir}; rm ${builddir}/glassfish_image.zip"/>
        </exec>
    </target>

    <target name="build-pkg" depends="clean, init, unzip">
        <exec executable="sh" failonerror="yes" outputproperty="size">
            <arg value="-c"/>
            <arg value="du -sk build | sed 's/[\t]*build//' | xargs -I {}  expr {} + 5000"/>
        </exec>        
        <echo message="sizeof.glassfish=${size}${line.separator}" file="${basedir}/../build/sizes.pro" append="true"/>            
        <echo message="Executing pack200 in ${appdir}"/>
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value='sh ${basedir}/../pack200.sh ${appdir} ${VerifyFile.class.name} ${VerifyFile.classpath}'/>
        </exec>     
        
        <copy  todir="${scriptsdir}">
            <fileset dir="${basedir}/pkg/scripts"/>
        </copy>
        
        <copy file="${basedir}/../commonfiles/unpack200.sh" tofile="${scriptsdir}/unpack200.sh"/>
        <copy file="${basedir}/../commonfiles/get_current_jdk.sh" tofile="${scriptsdir}/get_current_jdk.sh"/>
        <copy file="${basedir}/../netBeans/baseide/build/scripts/env.sh" tofile="${scriptsdir}/env.sh"/>
        <copy file="${basedir}/../netBeans/baseide/build/scripts/addproduct_id.sh" tofile="${scriptsdir}/addproduct_id.sh"/>
        <copy file="${basedir}/../netBeans/baseide/build/scripts/add_gf.sh" tofile="${scriptsdir}/add_gf.sh"/>
        <copy file="${basedir}/../netBeans/baseide/build/scripts/add_javadb.sh" tofile="${scriptsdir}/add_javadb.sh"/>
        <copy file="${basedir}/../netBeans/baseide/build/scripts/perm.sh" tofile="${scriptsdir}/perm.sh"/>        


        <!--<copy file="${basedir}/getport/dist/getport.jar" tofile="${scriptsdir}/getport.jar"/>        -->

        <chmod dir="${scriptsdir}" perm="ugo+x" includes="**/*"/>
        
        <echo message="Building glassfish-${glassfish.id}.pkg into ${basedir}/../build/glassfish-${glassfish.id}.pkg"/>
        <exec executable="sh" failonerror="yes">
            <arg value="-c"/>
            <arg value="cd ${basedir} ; pkgbuild --root ${appdir} --scripts ${scriptsdir} --identifier glassfish.${glassfish.id} --install-location ${install.dir}/glassfish-${glassfish.id} ${basedir}/../build/glassfish-${glassfish.id}.pkg"/>
        </exec>
    </target>
    
</project>
